buildscript {
    ext {
        springBootVersion = '1.0.0.RC5'
    }

    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/release" }
}

ext {
    jacksonDatabindVersion = '2.2.1'
    jerseyClientVersion = '2.5.1'
    jettyClientVersion = '9.1.2.v20140210'
    commonsLang3Version = '3.1'
    jodaTimeVersion = '2.3'
    springJavaConfigVersion = '1.0.0.m3'
    hibernateValidatorVersion = '5.1.0.Final'

    testNgVersion = '6.8'
    mockitoVersion = '1.9.5'
    hamcrestVersion = '1.3'
    cassandra = '2.0.6'
}

sourceCompatibility = 1.7
group = 'com.github.hvd617.tsa'
version = '1.0.0-SNAPSHOT'

configurations {
    // We will use testng and matcher throughout
    all*.exclude group: 'junit'

    // We will use log4j through-out.  Spring boot loads logback by default.
    all*.exclude group: 'commons-logging'
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

dependencies {
    // Logging
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:1.7.5'
    compile 'org.slf4j:jcl-over-slf4j:1.7.5'
    compile 'org.slf4j:jul-to-slf4j:1.7.5'

    // Spring
    compile "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-websocket:${springBootVersion}"

    // Misc
    compile "com.datastax.cassandra:cassandra-driver-core:2.0.0-rc1"
    compile "org.hibernate:hibernate-validator:${hibernateValidatorVersion}"

    // Testing
    testCompile "org.hamcrest:hamcrest-library:${hamcrestVersion}"
    testCompile "org.testng:testng:${testNgVersion}"
    testCompile "org.cassandraunit:cassandra-unit:2.0.2.0"
    testCompile "org.eclipse.jetty:jetty-client:${jettyClientVersion}"
    testCompile "org.eclipse.jetty.websocket:websocket-client:${jettyClientVersion}"
    testCompile "org.apache.cassandra:cassandra-all:${cassandra}"

    // Jersey
    testCompile "com.fasterxml.jackson.core:jackson-databind:${jacksonDatabindVersion}"
    testCompile "org.glassfish.jersey.core:jersey-client:${jerseyClientVersion}"
    testCompile "org.glassfish.jersey.connectors:jersey-grizzly-connector:${jerseyClientVersion}"
    testCompile "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyClientVersion}"
}

test {
    useTestNG()
    include(["**/*Tests.class", "**/*Test.class"])
    exclude(["**/Abstract*.class", '**/*$*'])
}

springBoot {
    mainClass = 'com.github.hiendo.tsa.config.AppMain'
}